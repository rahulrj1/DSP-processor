; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30143.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__97D3638F_vcruntime_new@h DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__244AF085_cstdlib DB 01H
__60BC708E_cmath DB 01H
__589FA321_type_traits DB 01H
__20BB4341_malloc@h DB 01H
__B0A13A33_vcruntime_exception@h DB 01H
__FF458F76_exception DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__7FE5F402_limits DB 01H
__12269DE6_xutility DB 01H
__79D216CD_xmemory DB 01H
__0D019051_xstring DB 01H
__760BB52B_stdexcept DB 01H
__FD9B9691_Ch05_01_fcpp@cpp DB 01H
__1347750E_utility DB 01H
__E458E21C_xstddef DB 01H
msvcjmc	ENDS
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QEAA@PEBD@Z		; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z	; CalcLeastSquares_Cpp
PUBLIC	?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z	; CalcLeastSquares_Iavx2
PUBLIC	?SumF64x4@@YANU__m256d@@@Z			; SumF64x4
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
PUBLIC	_TI2?AVruntime_error@std@@
PUBLIC	_CTA2?AVruntime_error@std@@
PUBLIC	??_C@_0CI@MJLKGKJO@CalcLeastSquares_cpp?$CI?$CJ?5CheckArg@ ; `string'
PUBLIC	??_C@_0CK@GAHBNDNH@CalcLeastSquares_Iavx2?$CI?$CJ?5CheckA@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3d719799812dea11
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	fabs:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?CheckArgs@@YA_NPEBN0_K@Z:PROC			; CheckArgs
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+210
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1runtime_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1runtime_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z DD imagerel $LN12
	DD	imagerel $LN12+633
	DD	imagerel $unwind$?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z DD imagerel $LN15
	DD	imagerel $LN15+1236
	DD	imagerel $unwind$?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SumF64x4@@YANU__m256d@@@Z DD imagerel $LN3
	DD	imagerel $LN3+288
	DD	imagerel $unwind$?SumF64x4@@YANU__m256d@@@Z
pdata	ENDS
;	COMDAT __real@3d719799812dea11
CONST	SEGMENT
__real@3d719799812dea11 DQ 03d719799812dea11r	; 1e-12
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0CK@GAHBNDNH@CalcLeastSquares_Iavx2?$CI?$CJ?5CheckA@
CONST	SEGMENT
??_C@_0CK@GAHBNDNH@CalcLeastSquares_Iavx2?$CI?$CJ?5CheckA@ DB 'CalcLeastS'
	DB	'quares_Iavx2() CheckArgs failed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MJLKGKJO@CalcLeastSquares_cpp?$CI?$CJ?5CheckArg@
CONST	SEGMENT
??_C@_0CI@MJLKGKJO@CalcLeastSquares_cpp?$CI?$CJ?5CheckArg@ DB 'CalcLeastS'
	DB	'quares_cpp() CheckArgs failed', 00H		; `string'
CONST	ENDS
;	COMDAT _CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
_CTA2?AVruntime_error@std@@ DD 02H
	DD	imagerel _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI2?AVruntime_error@std@@
xdata$x	SEGMENT
_TI2?AVruntime_error@std@@ DD 00H
	DD	imagerel ??1runtime_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	0107H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SumF64x4@@YANU__m256d@@@Z DD 035053d19H
	DD	010e3313H
	DD	070070053H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0288H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?SumF64x4@@YANU__m256d@@@Z$rtcName$0 DB 073H		; SumF64x4
	DB	075H
	DB	06dH
	DB	00H
	ORG $+12
?SumF64x4@@YANU__m256d@@@Z$rtcVarDesc DD 038H		; SumF64x4
	DD	08H
	DQ	FLAT:?SumF64x4@@YANU__m256d@@@Z$rtcName$0
	ORG $+48
?SumF64x4@@YANU__m256d@@@Z$rtcFrameData DD 01H		; SumF64x4
	DD	00H
	DQ	FLAT:?SumF64x4@@YANU__m256d@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z DD 02d062d01H
	DD	011f2324H
	DD	07018012eH
	DD	0d0165017H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z DD 025052201H
	DD	011d2322H
	DD	07016003bH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1runtime_error@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0b9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0exception@std@@QEAA@QEBD@Z$rtcName$0 DB 05fH		; std::exception::exception
	DB	049H
	DB	06eH
	DB	069H
	DB	074H
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+6
??0exception@std@@QEAA@QEBD@Z$rtcVarDesc DD 028H	; std::exception::exception
	DD	010H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+48
??0exception@std@@QEAA@QEBD@Z$rtcFrameData DD 01H	; std::exception::exception
	DD	00H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\DSP Project\Ch05_01_sol\Ch05_01\Ch05_01_fcpp.cpp
;	COMDAT ?SumF64x4@@YANU__m256d@@@Z
_TEXT	SEGMENT
sum$ = 8
temp0$ = 48
temp1$ = 96
temp2$ = 144
temp3$ = 192
$T4 = 432
$T5 = 480
$T6 = 528
$T7 = 576
__$ArrayPad$ = 600
x$ = 640
?SumF64x4@@YANU__m256d@@@Z PROC				; SumF64x4, COMDAT

; 30   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 98 02
	00 00		 sub	 rsp, 664		; 00000298H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8d 7c 24 30	 lea	 rdi, QWORD PTR [rsp+48]
  00018	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR [rsp+696]
  0002c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00033	48 33 c5	 xor	 rax, rbp
  00036	48 89 85 58 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FD9B9691_Ch05_01_fcpp@cpp
  00044	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 31   : 	double sum;
; 32   : 	__m128d temp0 = _mm256_extractf128_pd(x, 0);

  00049	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00050	c5 f8 10 00	 vmovups xmm0, XMMWORD PTR [rax]
  00054	c5 f9 11 85 b0
	01 00 00	 vmovupd XMMWORD PTR $T4[rbp], xmm0
  0005c	c5 f9 10 85 b0
	01 00 00	 vmovupd xmm0, XMMWORD PTR $T4[rbp]
  00064	c5 f9 11 45 30	 vmovupd XMMWORD PTR temp0$[rbp], xmm0

; 33   : 	__m128d temp1 = _mm256_extractf128_pd(x, 1);

  00069	48 8b 85 80 02
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  00070	c5 fd 10 00	 vmovupd ymm0, YMMWORD PTR [rax]
  00074	c4 e3 7d 19 c0
	01		 vextractf128 xmm0, ymm0, 1
  0007a	c5 f9 11 85 e0
	01 00 00	 vmovupd XMMWORD PTR $T5[rbp], xmm0
  00082	c5 f9 10 85 e0
	01 00 00	 vmovupd xmm0, XMMWORD PTR $T5[rbp]
  0008a	c5 f9 11 45 60	 vmovupd XMMWORD PTR temp1$[rbp], xmm0

; 34   : 	__m128d temp2 = _mm_add_pd(temp0, temp1);

  0008f	c5 f9 10 45 30	 vmovupd xmm0, XMMWORD PTR temp0$[rbp]
  00094	c5 f9 58 45 60	 vaddpd	 xmm0, xmm0, XMMWORD PTR temp1$[rbp]
  00099	c5 f9 11 85 10
	02 00 00	 vmovupd XMMWORD PTR $T6[rbp], xmm0
  000a1	c5 f9 10 85 10
	02 00 00	 vmovupd xmm0, XMMWORD PTR $T6[rbp]
  000a9	c5 f9 11 85 90
	00 00 00	 vmovupd XMMWORD PTR temp2$[rbp], xmm0

; 35   : 	__m128d temp3 = _mm_hadd_pd(temp2, temp2);

  000b1	c5 f9 10 85 90
	00 00 00	 vmovupd xmm0, XMMWORD PTR temp2$[rbp]
  000b9	c5 f9 7c 85 90
	00 00 00	 vhaddpd xmm0, xmm0, XMMWORD PTR temp2$[rbp]
  000c1	c5 f9 11 85 40
	02 00 00	 vmovupd XMMWORD PTR $T7[rbp], xmm0
  000c9	c5 f9 10 85 40
	02 00 00	 vmovupd xmm0, XMMWORD PTR $T7[rbp]
  000d1	c5 f9 11 85 c0
	00 00 00	 vmovupd XMMWORD PTR temp3$[rbp], xmm0

; 36   : 	_mm_store_sd(&sum, temp3);

  000d9	c5 f9 10 85 c0
	00 00 00	 vmovupd xmm0, XMMWORD PTR temp3$[rbp]
  000e1	c5 fb 11 45 08	 vmovsd	 QWORD PTR sum$[rbp], xmm0

; 37   : 	return sum;

  000e6	c5 fb 10 45 08	 vmovsd	 xmm0, QWORD PTR sum$[rbp]

; 38   : }

  000eb	c5 fa 7f 44 24
	20		 vmovdqu XMMWORD PTR [rsp+32], xmm0
  000f1	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  000f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SumF64x4@@YANU__m256d@@@Z$rtcFrameData
  000fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00101	c5 fa 6f 44 24
	20		 vmovdqu xmm0, XMMWORD PTR [rsp+32]
  00107	48 8b 8d 58 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0010e	48 33 cd	 xor	 rcx, rbp
  00111	e8 00 00 00 00	 call	 __security_check_cookie
  00116	48 8d a5 68 02
	00 00		 lea	 rsp, QWORD PTR [rbp+616]
  0011d	5f		 pop	 rdi
  0011e	5d		 pop	 rbp
  0011f	c3		 ret	 0
?SumF64x4@@YANU__m256d@@@Z ENDP				; SumF64x4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\DSP Project\Ch05_01_sol\Ch05_01\Ch05_01_fcpp.cpp
;	COMDAT ?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z
_TEXT	SEGMENT
packed_sum_x$ = 32
packed_sum_y$ = 96
packed_sum_xx$ = 160
packed_sum_xy$ = 224
i$ = 280
num_simd_elements$ = 312
x_vals$1 = 352
y_vals$2 = 416
sum_x$ = 472
sum_y$ = 504
sum_xx$ = 536
sum_xy$ = 568
denom$ = 600
$T3 = 1400
$T4 = 1472
$T5 = 1536
$T6 = 1600
$T7 = 1664
$T8 = 1728
$T9 = 1792
$T10 = 1856
$T11 = 1920
$T12 = 1984
$T13 = 2048
$T14 = 2112
$T15 = 2176
$T16 = 2240
$T17 = 2304
m$ = 2416
b$ = 2424
x$ = 2432
y$ = 2440
n$ = 2448
?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z PROC		; CalcLeastSquares_Iavx2, COMDAT

; 41   : {

$LN15:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	41 55		 push	 r13
  00016	55		 push	 rbp
  00017	57		 push	 rdi
  00018	48 81 ec 70 09
	00 00		 sub	 rsp, 2416		; 00000970H
  0001f	4c 8d 6c 24 20	 lea	 r13, QWORD PTR [rsp+32]
  00024	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  00029	48 83 e5 e0	 and	 rbp, -32		; ffffffffffffffe0H
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FD9B9691_Ch05_01_fcpp@cpp
  00034	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 42   : 	*m = 0.0;

  00039	49 8b 85 70 09
	00 00		 mov	 rax, QWORD PTR m$[r13]
  00040	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  00044	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0

; 43   : 	*b = 0.0;

  00048	49 8b 85 78 09
	00 00		 mov	 rax, QWORD PTR b$[r13]
  0004f	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  00053	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0

; 44   : 	if (!CheckArgs(x, y, n))

  00057	4d 8b 85 90 09
	00 00		 mov	 r8, QWORD PTR n$[r13]
  0005e	49 8b 95 88 09
	00 00		 mov	 rdx, QWORD PTR y$[r13]
  00065	49 8b 8d 80 09
	00 00		 mov	 rcx, QWORD PTR x$[r13]
  0006c	e8 00 00 00 00	 call	 ?CheckArgs@@YA_NPEBN0_K@Z ; CheckArgs
  00071	0f b6 c0	 movzx	 eax, al
  00074	85 c0		 test	 eax, eax
  00076	75 26		 jne	 SHORT $LN8@CalcLeastS

; 45   : 		throw std::runtime_error("CalcLeastSquares_Iavx2() CheckArgs failed");

  00078	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@GAHBNDNH@CalcLeastSquares_Iavx2?$CI?$CJ?5CheckA@
  0007f	48 8d 8d 78 05
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00086	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@PEBD@Z ; std::runtime_error::runtime_error
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
  00092	48 8d 8d 78 05
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00099	e8 00 00 00 00	 call	 _CxxThrowException
$LN8@CalcLeastS:

; 46   : 	__m256d packed_sum_x = _mm256_setzero_pd();

  0009e	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000a2	c5 fd 11 85 c0
	05 00 00	 vmovupd YMMWORD PTR $T4[rbp], ymm0
  000aa	c5 fd 10 85 c0
	05 00 00	 vmovupd ymm0, YMMWORD PTR $T4[rbp]
  000b2	c5 fd 11 45 20	 vmovupd YMMWORD PTR packed_sum_x$[rbp], ymm0

; 47   : 	__m256d packed_sum_y = _mm256_setzero_pd();

  000b7	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000bb	c5 fd 11 85 00
	06 00 00	 vmovupd YMMWORD PTR $T5[rbp], ymm0
  000c3	c5 fd 10 85 00
	06 00 00	 vmovupd ymm0, YMMWORD PTR $T5[rbp]
  000cb	c5 fd 11 45 60	 vmovupd YMMWORD PTR packed_sum_y$[rbp], ymm0

; 48   : 	__m256d packed_sum_xx = _mm256_setzero_pd();

  000d0	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000d4	c5 fd 11 85 40
	06 00 00	 vmovupd YMMWORD PTR $T6[rbp], ymm0
  000dc	c5 fd 10 85 40
	06 00 00	 vmovupd ymm0, YMMWORD PTR $T6[rbp]
  000e4	c5 fd 11 85 a0
	00 00 00	 vmovupd YMMWORD PTR packed_sum_xx$[rbp], ymm0

; 49   : 	__m256d packed_sum_xy = _mm256_setzero_pd();

  000ec	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000f0	c5 fd 11 85 80
	06 00 00	 vmovupd YMMWORD PTR $T7[rbp], ymm0
  000f8	c5 fd 10 85 80
	06 00 00	 vmovupd ymm0, YMMWORD PTR $T7[rbp]
  00100	c5 fd 11 85 e0
	00 00 00	 vmovupd YMMWORD PTR packed_sum_xy$[rbp], ymm0

; 50   : 	size_t i = 0;

  00108	48 c7 85 18 01
	00 00 00 00 00
	00		 mov	 QWORD PTR i$[rbp], 0

; 51   : 	const size_t num_simd_elements = 4;

  00113	48 c7 85 38 01
	00 00 04 00 00
	00		 mov	 QWORD PTR num_simd_elements$[rbp], 4

; 52   : 	for (; n - i >= num_simd_elements; i += num_simd_elements)

  0011e	eb 12		 jmp	 SHORT $LN4@CalcLeastS
$LN2@CalcLeastS:
  00120	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR i$[rbp]
  00127	48 83 c0 04	 add	 rax, 4
  0012b	48 89 85 18 01
	00 00		 mov	 QWORD PTR i$[rbp], rax
$LN4@CalcLeastS:
  00132	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR i$[rbp]
  00139	49 8b 8d 90 09
	00 00		 mov	 rcx, QWORD PTR n$[r13]
  00140	48 2b c8	 sub	 rcx, rax
  00143	48 8b c1	 mov	 rax, rcx
  00146	48 83 f8 04	 cmp	 rax, 4
  0014a	0f 82 07 01 00
	00		 jb	 $LN3@CalcLeastS

; 53   : 	{
; 54   : 		__m256d x_vals = _mm256_load_pd(&x[i]);

  00150	49 8b 85 80 09
	00 00		 mov	 rax, QWORD PTR x$[r13]
  00157	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR i$[rbp]
  0015e	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  00162	c5 fd 10 00	 vmovupd ymm0, YMMWORD PTR [rax]
  00166	c5 fd 11 85 c0
	06 00 00	 vmovupd YMMWORD PTR $T8[rbp], ymm0
  0016e	c5 fd 10 85 c0
	06 00 00	 vmovupd ymm0, YMMWORD PTR $T8[rbp]
  00176	c5 fd 11 85 60
	01 00 00	 vmovupd YMMWORD PTR x_vals$1[rbp], ymm0

; 55   : 		__m256d y_vals = _mm256_load_pd(&y[i]);

  0017e	49 8b 85 88 09
	00 00		 mov	 rax, QWORD PTR y$[r13]
  00185	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR i$[rbp]
  0018c	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  00190	c5 fd 10 00	 vmovupd ymm0, YMMWORD PTR [rax]
  00194	c5 fd 11 85 00
	07 00 00	 vmovupd YMMWORD PTR $T9[rbp], ymm0
  0019c	c5 fd 10 85 00
	07 00 00	 vmovupd ymm0, YMMWORD PTR $T9[rbp]
  001a4	c5 fd 11 85 a0
	01 00 00	 vmovupd YMMWORD PTR y_vals$2[rbp], ymm0

; 56   : 		packed_sum_x = _mm256_add_pd(packed_sum_x, x_vals);

  001ac	c5 fd 10 45 20	 vmovupd ymm0, YMMWORD PTR packed_sum_x$[rbp]
  001b1	c5 fd 58 85 60
	01 00 00	 vaddpd	 ymm0, ymm0, YMMWORD PTR x_vals$1[rbp]
  001b9	c5 fd 11 85 40
	07 00 00	 vmovupd YMMWORD PTR $T10[rbp], ymm0
  001c1	c5 fd 10 85 40
	07 00 00	 vmovupd ymm0, YMMWORD PTR $T10[rbp]
  001c9	c5 fd 11 45 20	 vmovupd YMMWORD PTR packed_sum_x$[rbp], ymm0

; 57   : 		packed_sum_y = _mm256_add_pd(packed_sum_y, y_vals);

  001ce	c5 fd 10 45 60	 vmovupd ymm0, YMMWORD PTR packed_sum_y$[rbp]
  001d3	c5 fd 58 85 a0
	01 00 00	 vaddpd	 ymm0, ymm0, YMMWORD PTR y_vals$2[rbp]
  001db	c5 fd 11 85 80
	07 00 00	 vmovupd YMMWORD PTR $T11[rbp], ymm0
  001e3	c5 fd 10 85 80
	07 00 00	 vmovupd ymm0, YMMWORD PTR $T11[rbp]
  001eb	c5 fd 11 45 60	 vmovupd YMMWORD PTR packed_sum_y$[rbp], ymm0

; 58   : 		packed_sum_xx = _mm256_fmadd_pd(x_vals, x_vals, packed_sum_xx);

  001f0	c5 fd 10 85 60
	01 00 00	 vmovupd ymm0, YMMWORD PTR x_vals$1[rbp]
  001f8	c5 fd 10 8d 60
	01 00 00	 vmovupd ymm1, YMMWORD PTR x_vals$1[rbp]
  00200	c4 e2 f5 a8 85
	a0 00 00 00	 vfmadd213pd ymm0, ymm1, YMMWORD PTR packed_sum_xx$[rbp]
  00209	c5 fd 11 85 c0
	07 00 00	 vmovupd YMMWORD PTR $T12[rbp], ymm0
  00211	c5 fd 10 85 c0
	07 00 00	 vmovupd ymm0, YMMWORD PTR $T12[rbp]
  00219	c5 fd 11 85 a0
	00 00 00	 vmovupd YMMWORD PTR packed_sum_xx$[rbp], ymm0

; 59   : 		packed_sum_xy = _mm256_fmadd_pd(x_vals, y_vals, packed_sum_xy);

  00221	c5 fd 10 85 60
	01 00 00	 vmovupd ymm0, YMMWORD PTR x_vals$1[rbp]
  00229	c5 fd 10 8d a0
	01 00 00	 vmovupd ymm1, YMMWORD PTR y_vals$2[rbp]
  00231	c4 e2 f5 a8 85
	e0 00 00 00	 vfmadd213pd ymm0, ymm1, YMMWORD PTR packed_sum_xy$[rbp]
  0023a	c5 fd 11 85 00
	08 00 00	 vmovupd YMMWORD PTR $T13[rbp], ymm0
  00242	c5 fd 10 85 00
	08 00 00	 vmovupd ymm0, YMMWORD PTR $T13[rbp]
  0024a	c5 fd 11 85 e0
	00 00 00	 vmovupd YMMWORD PTR packed_sum_xy$[rbp], ymm0

; 60   : 	}

  00252	e9 c9 fe ff ff	 jmp	 $LN2@CalcLeastS
$LN3@CalcLeastS:

; 61   : 	// Reduce packed sum values to scalars
; 62   : 	double sum_x = SumF64x4(packed_sum_x);

  00257	c5 fd 10 45 20	 vmovupd ymm0, YMMWORD PTR packed_sum_x$[rbp]
  0025c	c5 fd 11 85 40
	08 00 00	 vmovupd YMMWORD PTR $T14[rbp], ymm0
  00264	48 8d 8d 40 08
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  0026b	e8 00 00 00 00	 call	 ?SumF64x4@@YANU__m256d@@@Z ; SumF64x4
  00270	c5 fb 11 85 d8
	01 00 00	 vmovsd	 QWORD PTR sum_x$[rbp], xmm0

; 63   : 	double sum_y = SumF64x4(packed_sum_y);

  00278	c5 fd 10 45 60	 vmovupd ymm0, YMMWORD PTR packed_sum_y$[rbp]
  0027d	c5 fd 11 85 80
	08 00 00	 vmovupd YMMWORD PTR $T15[rbp], ymm0
  00285	48 8d 8d 80 08
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0028c	e8 00 00 00 00	 call	 ?SumF64x4@@YANU__m256d@@@Z ; SumF64x4
  00291	c5 fb 11 85 f8
	01 00 00	 vmovsd	 QWORD PTR sum_y$[rbp], xmm0

; 64   : 	double sum_xx = SumF64x4(packed_sum_xx);

  00299	c5 fd 10 85 a0
	00 00 00	 vmovupd ymm0, YMMWORD PTR packed_sum_xx$[rbp]
  002a1	c5 fd 11 85 c0
	08 00 00	 vmovupd YMMWORD PTR $T16[rbp], ymm0
  002a9	48 8d 8d c0 08
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  002b0	e8 00 00 00 00	 call	 ?SumF64x4@@YANU__m256d@@@Z ; SumF64x4
  002b5	c5 fb 11 85 18
	02 00 00	 vmovsd	 QWORD PTR sum_xx$[rbp], xmm0

; 65   : 	double sum_xy = SumF64x4(packed_sum_xy);

  002bd	c5 fd 10 85 e0
	00 00 00	 vmovupd ymm0, YMMWORD PTR packed_sum_xy$[rbp]
  002c5	c5 fd 11 85 00
	09 00 00	 vmovupd YMMWORD PTR $T17[rbp], ymm0
  002cd	48 8d 8d 00 09
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  002d4	e8 00 00 00 00	 call	 ?SumF64x4@@YANU__m256d@@@Z ; SumF64x4
  002d9	c5 fb 11 85 38
	02 00 00	 vmovsd	 QWORD PTR sum_xy$[rbp], xmm0

; 66   : 	// Process final values
; 67   : 	for (; i < n; i++)

  002e1	eb 11		 jmp	 SHORT $LN7@CalcLeastS
$LN5@CalcLeastS:
  002e3	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR i$[rbp]
  002ea	48 ff c0	 inc	 rax
  002ed	48 89 85 18 01
	00 00		 mov	 QWORD PTR i$[rbp], rax
$LN7@CalcLeastS:
  002f4	49 8b 85 90 09
	00 00		 mov	 rax, QWORD PTR n$[r13]
  002fb	48 39 85 18 01
	00 00		 cmp	 QWORD PTR i$[rbp], rax
  00302	0f 83 c1 00 00
	00		 jae	 $LN6@CalcLeastS

; 68   : 	{
; 69   : 		sum_x += x[i];

  00308	49 8b 85 80 09
	00 00		 mov	 rax, QWORD PTR x$[r13]
  0030f	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR i$[rbp]
  00316	c5 fb 10 85 d8
	01 00 00	 vmovsd	 xmm0, QWORD PTR sum_x$[rbp]
  0031e	c5 fb 58 04 c8	 vaddsd	 xmm0, xmm0, QWORD PTR [rax+rcx*8]
  00323	c5 fb 11 85 d8
	01 00 00	 vmovsd	 QWORD PTR sum_x$[rbp], xmm0

; 70   : 		sum_y += y[i];

  0032b	49 8b 85 88 09
	00 00		 mov	 rax, QWORD PTR y$[r13]
  00332	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR i$[rbp]
  00339	c5 fb 10 85 f8
	01 00 00	 vmovsd	 xmm0, QWORD PTR sum_y$[rbp]
  00341	c5 fb 58 04 c8	 vaddsd	 xmm0, xmm0, QWORD PTR [rax+rcx*8]
  00346	c5 fb 11 85 f8
	01 00 00	 vmovsd	 QWORD PTR sum_y$[rbp], xmm0

; 71   : 		sum_xx += x[i] * x[i];

  0034e	49 8b 85 80 09
	00 00		 mov	 rax, QWORD PTR x$[r13]
  00355	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR i$[rbp]
  0035c	49 8b 95 80 09
	00 00		 mov	 rdx, QWORD PTR x$[r13]
  00363	4c 8b 85 18 01
	00 00		 mov	 r8, QWORD PTR i$[rbp]
  0036a	c5 fb 10 04 c8	 vmovsd	 xmm0, QWORD PTR [rax+rcx*8]
  0036f	c4 a1 7b 59 04
	c2		 vmulsd	 xmm0, xmm0, QWORD PTR [rdx+r8*8]
  00375	c5 fb 10 8d 18
	02 00 00	 vmovsd	 xmm1, QWORD PTR sum_xx$[rbp]
  0037d	c5 f3 58 c0	 vaddsd	 xmm0, xmm1, xmm0
  00381	c5 fb 11 85 18
	02 00 00	 vmovsd	 QWORD PTR sum_xx$[rbp], xmm0

; 72   : 		sum_xy += x[i] * y[i];

  00389	49 8b 85 80 09
	00 00		 mov	 rax, QWORD PTR x$[r13]
  00390	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR i$[rbp]
  00397	49 8b 95 88 09
	00 00		 mov	 rdx, QWORD PTR y$[r13]
  0039e	4c 8b 85 18 01
	00 00		 mov	 r8, QWORD PTR i$[rbp]
  003a5	c5 fb 10 04 c8	 vmovsd	 xmm0, QWORD PTR [rax+rcx*8]
  003aa	c4 a1 7b 59 04
	c2		 vmulsd	 xmm0, xmm0, QWORD PTR [rdx+r8*8]
  003b0	c5 fb 10 8d 38
	02 00 00	 vmovsd	 xmm1, QWORD PTR sum_xy$[rbp]
  003b8	c5 f3 58 c0	 vaddsd	 xmm0, xmm1, xmm0
  003bc	c5 fb 11 85 38
	02 00 00	 vmovsd	 QWORD PTR sum_xy$[rbp], xmm0

; 73   : 	}

  003c4	e9 1a ff ff ff	 jmp	 $LN5@CalcLeastS
$LN6@CalcLeastS:

; 74   : 	// Calculate slope and intercept
; 75   : 	double denom = n * sum_xx - sum_x * sum_x;

  003c9	49 8b 85 90 09
	00 00		 mov	 rax, QWORD PTR n$[r13]
  003d0	48 85 c0	 test	 rax, rax
  003d3	7c 07		 jl	 SHORT $LN13@CalcLeastS
  003d5	c4 e1 fb 2a c0	 vcvtsi2sd xmm0, xmm0, rax
  003da	eb 1a		 jmp	 SHORT $LN14@CalcLeastS
$LN13@CalcLeastS:
  003dc	48 8b c8	 mov	 rcx, rax
  003df	48 d1 e9	 shr	 rcx, 1
  003e2	48 83 e0 01	 and	 rax, 1
  003e6	48 0b c8	 or	 rcx, rax
  003e9	c4 e1 f3 2a c9	 vcvtsi2sd xmm1, xmm1, rcx
  003ee	c5 f3 58 c9	 vaddsd	 xmm1, xmm1, xmm1
  003f2	c5 f9 10 c1	 vmovupd xmm0, xmm1
$LN14@CalcLeastS:
  003f6	c5 fb 59 85 18
	02 00 00	 vmulsd	 xmm0, xmm0, QWORD PTR sum_xx$[rbp]
  003fe	c5 fb 10 8d d8
	01 00 00	 vmovsd	 xmm1, QWORD PTR sum_x$[rbp]
  00406	c5 f3 59 8d d8
	01 00 00	 vmulsd	 xmm1, xmm1, QWORD PTR sum_x$[rbp]
  0040e	c5 fb 5c c1	 vsubsd	 xmm0, xmm0, xmm1
  00412	c5 fb 11 85 58
	02 00 00	 vmovsd	 QWORD PTR denom$[rbp], xmm0

; 76   : 	if (fabs(denom) >= c_LsEpsilon)

  0041a	c5 fb 10 85 58
	02 00 00	 vmovsd	 xmm0, QWORD PTR denom$[rbp]
  00422	e8 00 00 00 00	 call	 fabs
  00427	c5 f9 2f 05 00
	00 00 00	 vcomisd xmm0, QWORD PTR __real@3d719799812dea11
  0042f	0f 82 93 00 00
	00		 jb	 $LN9@CalcLeastS

; 77   : 	{
; 78   : 		*m = (n * sum_xy - sum_x * sum_y) / denom;

  00435	49 8b 85 90 09
	00 00		 mov	 rax, QWORD PTR n$[r13]
  0043c	48 85 c0	 test	 rax, rax
  0043f	7c 07		 jl	 SHORT $LN11@CalcLeastS
  00441	c4 e1 fb 2a c0	 vcvtsi2sd xmm0, xmm0, rax
  00446	eb 1a		 jmp	 SHORT $LN12@CalcLeastS
$LN11@CalcLeastS:
  00448	48 8b c8	 mov	 rcx, rax
  0044b	48 d1 e9	 shr	 rcx, 1
  0044e	48 83 e0 01	 and	 rax, 1
  00452	48 0b c8	 or	 rcx, rax
  00455	c4 e1 f3 2a c9	 vcvtsi2sd xmm1, xmm1, rcx
  0045a	c5 f3 58 c9	 vaddsd	 xmm1, xmm1, xmm1
  0045e	c5 f9 10 c1	 vmovupd xmm0, xmm1
$LN12@CalcLeastS:
  00462	c5 fb 59 85 38
	02 00 00	 vmulsd	 xmm0, xmm0, QWORD PTR sum_xy$[rbp]
  0046a	c5 fb 10 8d d8
	01 00 00	 vmovsd	 xmm1, QWORD PTR sum_x$[rbp]
  00472	c5 f3 59 8d f8
	01 00 00	 vmulsd	 xmm1, xmm1, QWORD PTR sum_y$[rbp]
  0047a	c5 fb 5c c1	 vsubsd	 xmm0, xmm0, xmm1
  0047e	c5 fb 5e 85 58
	02 00 00	 vdivsd	 xmm0, xmm0, QWORD PTR denom$[rbp]
  00486	49 8b 85 70 09
	00 00		 mov	 rax, QWORD PTR m$[r13]
  0048d	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0

; 79   : 		*b = (sum_xx * sum_y - sum_x * sum_xy) / denom;

  00491	c5 fb 10 85 18
	02 00 00	 vmovsd	 xmm0, QWORD PTR sum_xx$[rbp]
  00499	c5 fb 59 85 f8
	01 00 00	 vmulsd	 xmm0, xmm0, QWORD PTR sum_y$[rbp]
  004a1	c5 fb 10 8d d8
	01 00 00	 vmovsd	 xmm1, QWORD PTR sum_x$[rbp]
  004a9	c5 f3 59 8d 38
	02 00 00	 vmulsd	 xmm1, xmm1, QWORD PTR sum_xy$[rbp]
  004b1	c5 fb 5c c1	 vsubsd	 xmm0, xmm0, xmm1
  004b5	c5 fb 5e 85 58
	02 00 00	 vdivsd	 xmm0, xmm0, QWORD PTR denom$[rbp]
  004bd	49 8b 85 78 09
	00 00		 mov	 rax, QWORD PTR b$[r13]
  004c4	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0
$LN9@CalcLeastS:
$LN10@CalcLeastS:

; 80   : 	}
; 81   : }

  004c8	49 8d a5 50 09
	00 00		 lea	 rsp, QWORD PTR [r13+2384]
  004cf	5f		 pop	 rdi
  004d0	5d		 pop	 rbp
  004d1	41 5d		 pop	 r13
  004d3	c3		 ret	 0
?CalcLeastSquares_Iavx2@@YAXPEAN0PEBN1_K@Z ENDP		; CalcLeastSquares_Iavx2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\DSP Project\Ch05_01_sol\Ch05_01\Ch05_01_fcpp.cpp
;	COMDAT ?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z
_TEXT	SEGMENT
sum_x$ = 8
sum_y$ = 40
sum_xx$ = 72
sum_xy$ = 104
i$1 = 136
denom$ = 168
$T2 = 392
m$ = 464
b$ = 472
x$ = 480
y$ = 488
n$ = 496
?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z PROC		; CalcLeastSquares_Cpp, COMDAT

; 9    : {

$LN12:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec d8 01
	00 00		 sub	 rsp, 472		; 000001d8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__FD9B9691_Ch05_01_fcpp@cpp
  00029	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 10   : 	*m = 0.0;

  0002e	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR m$[rbp]
  00035	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  00039	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0

; 11   : 	*b = 0.0;

  0003d	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR b$[rbp]
  00044	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  00048	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0

; 12   : 	if (!CheckArgs(x, y, n))

  0004c	4c 8b 85 f0 01
	00 00		 mov	 r8, QWORD PTR n$[rbp]
  00053	48 8b 95 e8 01
	00 00		 mov	 rdx, QWORD PTR y$[rbp]
  0005a	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  00061	e8 00 00 00 00	 call	 ?CheckArgs@@YA_NPEBN0_K@Z ; CheckArgs
  00066	0f b6 c0	 movzx	 eax, al
  00069	85 c0		 test	 eax, eax
  0006b	75 26		 jne	 SHORT $LN5@CalcLeastS

; 13   : 		throw std::runtime_error("CalcLeastSquares_cpp() CheckArgs failed");

  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CI@MJLKGKJO@CalcLeastSquares_cpp?$CI?$CJ?5CheckArg@
  00074	48 8d 8d 88 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0007b	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@PEBD@Z ; std::runtime_error::runtime_error
  00080	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
  00087	48 8d 8d 88 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0008e	e8 00 00 00 00	 call	 _CxxThrowException
$LN5@CalcLeastS:

; 14   : 	double sum_x = 0.0, sum_y = 0.0, sum_xx = 0.0, sum_xy = 0.0;

  00093	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  00097	c5 fb 11 45 08	 vmovsd	 QWORD PTR sum_x$[rbp], xmm0
  0009c	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000a0	c5 fb 11 45 28	 vmovsd	 QWORD PTR sum_y$[rbp], xmm0
  000a5	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000a9	c5 fb 11 45 48	 vmovsd	 QWORD PTR sum_xx$[rbp], xmm0
  000ae	c5 f9 57 c0	 vxorpd	 xmm0, xmm0, xmm0
  000b2	c5 fb 11 45 68	 vmovsd	 QWORD PTR sum_xy$[rbp], xmm0

; 15   : 	for (size_t i = 0; i < n; i++)

  000b7	48 c7 85 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR i$1[rbp], 0
  000c2	eb 11		 jmp	 SHORT $LN4@CalcLeastS
$LN2@CalcLeastS:
  000c4	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR i$1[rbp]
  000cb	48 ff c0	 inc	 rax
  000ce	48 89 85 88 00
	00 00		 mov	 QWORD PTR i$1[rbp], rax
$LN4@CalcLeastS:
  000d5	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR n$[rbp]
  000dc	48 39 85 88 00
	00 00		 cmp	 QWORD PTR i$1[rbp], rax
  000e3	0f 83 a9 00 00
	00		 jae	 $LN3@CalcLeastS

; 16   : 	{
; 17   : 		sum_x += x[i];

  000e9	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  000f0	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR i$1[rbp]
  000f7	c5 fb 10 45 08	 vmovsd	 xmm0, QWORD PTR sum_x$[rbp]
  000fc	c5 fb 58 04 c8	 vaddsd	 xmm0, xmm0, QWORD PTR [rax+rcx*8]
  00101	c5 fb 11 45 08	 vmovsd	 QWORD PTR sum_x$[rbp], xmm0

; 18   : 		sum_y += y[i];

  00106	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR y$[rbp]
  0010d	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR i$1[rbp]
  00114	c5 fb 10 45 28	 vmovsd	 xmm0, QWORD PTR sum_y$[rbp]
  00119	c5 fb 58 04 c8	 vaddsd	 xmm0, xmm0, QWORD PTR [rax+rcx*8]
  0011e	c5 fb 11 45 28	 vmovsd	 QWORD PTR sum_y$[rbp], xmm0

; 19   : 		sum_xx += x[i] * x[i];

  00123	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0012a	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR i$1[rbp]
  00131	48 8b 95 e0 01
	00 00		 mov	 rdx, QWORD PTR x$[rbp]
  00138	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR i$1[rbp]
  0013f	c5 fb 10 04 c8	 vmovsd	 xmm0, QWORD PTR [rax+rcx*8]
  00144	c4 a1 7b 59 04
	c2		 vmulsd	 xmm0, xmm0, QWORD PTR [rdx+r8*8]
  0014a	c5 fb 10 4d 48	 vmovsd	 xmm1, QWORD PTR sum_xx$[rbp]
  0014f	c5 f3 58 c0	 vaddsd	 xmm0, xmm1, xmm0
  00153	c5 fb 11 45 48	 vmovsd	 QWORD PTR sum_xx$[rbp], xmm0

; 20   : 		sum_xy += x[i] * y[i];

  00158	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR x$[rbp]
  0015f	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR i$1[rbp]
  00166	48 8b 95 e8 01
	00 00		 mov	 rdx, QWORD PTR y$[rbp]
  0016d	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR i$1[rbp]
  00174	c5 fb 10 04 c8	 vmovsd	 xmm0, QWORD PTR [rax+rcx*8]
  00179	c4 a1 7b 59 04
	c2		 vmulsd	 xmm0, xmm0, QWORD PTR [rdx+r8*8]
  0017f	c5 fb 10 4d 68	 vmovsd	 xmm1, QWORD PTR sum_xy$[rbp]
  00184	c5 f3 58 c0	 vaddsd	 xmm0, xmm1, xmm0
  00188	c5 fb 11 45 68	 vmovsd	 QWORD PTR sum_xy$[rbp], xmm0

; 21   : 	}

  0018d	e9 32 ff ff ff	 jmp	 $LN2@CalcLeastS
$LN3@CalcLeastS:

; 22   : 	double denom = n * sum_xx - sum_x * sum_x;

  00192	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR n$[rbp]
  00199	48 85 c0	 test	 rax, rax
  0019c	7c 07		 jl	 SHORT $LN10@CalcLeastS
  0019e	c4 e1 fb 2a c0	 vcvtsi2sd xmm0, xmm0, rax
  001a3	eb 1a		 jmp	 SHORT $LN11@CalcLeastS
$LN10@CalcLeastS:
  001a5	48 8b c8	 mov	 rcx, rax
  001a8	48 d1 e9	 shr	 rcx, 1
  001ab	48 83 e0 01	 and	 rax, 1
  001af	48 0b c8	 or	 rcx, rax
  001b2	c4 e1 f3 2a c9	 vcvtsi2sd xmm1, xmm1, rcx
  001b7	c5 f3 58 c9	 vaddsd	 xmm1, xmm1, xmm1
  001bb	c5 f9 10 c1	 vmovupd xmm0, xmm1
$LN11@CalcLeastS:
  001bf	c5 fb 59 45 48	 vmulsd	 xmm0, xmm0, QWORD PTR sum_xx$[rbp]
  001c4	c5 fb 10 4d 08	 vmovsd	 xmm1, QWORD PTR sum_x$[rbp]
  001c9	c5 f3 59 4d 08	 vmulsd	 xmm1, xmm1, QWORD PTR sum_x$[rbp]
  001ce	c5 fb 5c c1	 vsubsd	 xmm0, xmm0, xmm1
  001d2	c5 fb 11 85 a8
	00 00 00	 vmovsd	 QWORD PTR denom$[rbp], xmm0

; 23   : 	if (fabs(denom) >= c_LsEpsilon)

  001da	c5 fb 10 85 a8
	00 00 00	 vmovsd	 xmm0, QWORD PTR denom$[rbp]
  001e2	e8 00 00 00 00	 call	 fabs
  001e7	c5 f9 2f 05 00
	00 00 00	 vcomisd xmm0, QWORD PTR __real@3d719799812dea11
  001ef	72 7e		 jb	 SHORT $LN6@CalcLeastS

; 24   : 	{
; 25   : 		*m = (n * sum_xy - sum_x * sum_y) / denom;

  001f1	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR n$[rbp]
  001f8	48 85 c0	 test	 rax, rax
  001fb	7c 07		 jl	 SHORT $LN8@CalcLeastS
  001fd	c4 e1 fb 2a c0	 vcvtsi2sd xmm0, xmm0, rax
  00202	eb 1a		 jmp	 SHORT $LN9@CalcLeastS
$LN8@CalcLeastS:
  00204	48 8b c8	 mov	 rcx, rax
  00207	48 d1 e9	 shr	 rcx, 1
  0020a	48 83 e0 01	 and	 rax, 1
  0020e	48 0b c8	 or	 rcx, rax
  00211	c4 e1 f3 2a c9	 vcvtsi2sd xmm1, xmm1, rcx
  00216	c5 f3 58 c9	 vaddsd	 xmm1, xmm1, xmm1
  0021a	c5 f9 10 c1	 vmovupd xmm0, xmm1
$LN9@CalcLeastS:
  0021e	c5 fb 59 45 68	 vmulsd	 xmm0, xmm0, QWORD PTR sum_xy$[rbp]
  00223	c5 fb 10 4d 08	 vmovsd	 xmm1, QWORD PTR sum_x$[rbp]
  00228	c5 f3 59 4d 28	 vmulsd	 xmm1, xmm1, QWORD PTR sum_y$[rbp]
  0022d	c5 fb 5c c1	 vsubsd	 xmm0, xmm0, xmm1
  00231	c5 fb 5e 85 a8
	00 00 00	 vdivsd	 xmm0, xmm0, QWORD PTR denom$[rbp]
  00239	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR m$[rbp]
  00240	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0

; 26   : 		*b = (sum_xx * sum_y - sum_x * sum_xy) / denom;

  00244	c5 fb 10 45 48	 vmovsd	 xmm0, QWORD PTR sum_xx$[rbp]
  00249	c5 fb 59 45 28	 vmulsd	 xmm0, xmm0, QWORD PTR sum_y$[rbp]
  0024e	c5 fb 10 4d 08	 vmovsd	 xmm1, QWORD PTR sum_x$[rbp]
  00253	c5 f3 59 4d 68	 vmulsd	 xmm1, xmm1, QWORD PTR sum_xy$[rbp]
  00258	c5 fb 5c c1	 vsubsd	 xmm0, xmm0, xmm1
  0025c	c5 fb 5e 85 a8
	00 00 00	 vdivsd	 xmm0, xmm0, QWORD PTR denom$[rbp]
  00264	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR b$[rbp]
  0026b	c5 fb 11 00	 vmovsd	 QWORD PTR [rax], xmm0
$LN6@CalcLeastS:
$LN7@CalcLeastS:

; 27   : 	}
; 28   : }

  0026f	48 8d a5 b8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+440]
  00276	5f		 pop	 rdi
  00277	5d		 pop	 rbp
  00278	c3		 ret	 0
?CalcLeastSquares_Cpp@@YAXPEAN0PEBN1_K@Z ENDP		; CalcLeastSquares_Cpp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001e	e8 00 00 00 00	 call	 ??1runtime_error@std@@UEAA@XZ
  00023	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 11		 je	 SHORT $LN2@scalar
  00030	ba 18 00 00 00	 mov	 edx, 24
  00035	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004f	5f		 pop	 rdi
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  0001f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00026	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  0002b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00026	5f		 pop	 rdi
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0runtime_error@std@@QEAA@PEBD@Z PROC			; std::runtime_error::runtime_error, COMDAT

; 113  :     explicit runtime_error(const char* _Message) : _Mybase(_Message) {}

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__760BB52B_stdexcept
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Message$[rbp]
  0002b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00032	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBD@Z ; std::exception::exception
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx
  00048	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
??0runtime_error@std@@QEAA@PEBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001e	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00023	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00029	83 e0 01	 and	 eax, 1
  0002c	85 c0		 test	 eax, eax
  0002e	74 11		 je	 SHORT $LN2@scalar
  00030	ba 18 00 00 00	 mov	 edx, 24
  00035	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004f	5f		 pop	 rdi
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  0001f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00026	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0002b	74 14		 je	 SHORT $LN3@what
  0002d	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00038	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  0003f	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00048	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  0004f	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 96   :     }

  00056	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00026	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 90   :         __std_exception_destroy(&_Data);

  00030	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 __std_exception_destroy

; 91   :     }

  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00032	48 89 08	 mov	 QWORD PTR [rax], rcx

; 71   :         : _Data()

  00035	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 8b f8	 mov	 rdi, rax
  00043	33 c0		 xor	 eax, eax
  00045	b9 10 00 00 00	 mov	 ecx, 16
  0004a	f3 aa		 rep stosb

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 83 c0 08	 add	 rax, 8
  00057	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Other$[rbp]
  0005e	48 83 c1 08	 add	 rcx, 8
  00062	48 8b d0	 mov	 rdx, rax
  00065	e8 00 00 00 00	 call	 __std_exception_copy

; 74   :     }

  0006a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 8
__$ArrayPad$ = 232
this$ = 272
_Message$ = 280
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 59   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  0001d	b9 0e 00 00 00	 mov	 ecx, 14
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00038	48 33 c5	 xor	 rax, rbp
  0003b	48 89 85 e8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__B0A13A33_vcruntime_exception@h
  00049	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0005c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 58   :         : _Data()

  0005f	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00066	48 83 c0 08	 add	 rax, 8
  0006a	48 8b f8	 mov	 rdi, rax
  0006d	33 c0		 xor	 eax, eax
  0006f	b9 10 00 00 00	 mov	 ecx, 16
  00074	f3 aa		 rep stosb

; 60   :         __std_exception_data _InitData = { _Message, true };

  00076	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR _Message$[rbp]
  0007d	48 89 45 08	 mov	 QWORD PTR _InitData$[rbp], rax
  00081	c6 45 10 01	 mov	 BYTE PTR _InitData$[rbp+8], 1

; 61   :         __std_exception_copy(&_InitData, &_Data);

  00085	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008c	48 83 c0 08	 add	 rax, 8
  00090	48 8b d0	 mov	 rdx, rax
  00093	48 8d 4d 08	 lea	 rcx, QWORD PTR _InitData$[rbp]
  00097	e8 00 00 00 00	 call	 __std_exception_copy

; 62   :     }

  0009c	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a3	48 8b f8	 mov	 rdi, rax
  000a6	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0exception@std@@QEAA@QEBD@Z$rtcFrameData
  000b1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b6	48 8b c7	 mov	 rax, rdi
  000b9	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000c0	48 33 cd	 xor	 rcx, rbp
  000c3	e8 00 00 00 00	 call	 __security_check_cookie
  000c8	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000cf	5f		 pop	 rdi
  000d0	5d		 pop	 rbp
  000d1	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
